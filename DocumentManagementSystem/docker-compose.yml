services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
      - elastic


  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: karo
      MINIO_ROOT_PASSWORD: nudidudi
      MINIO_DEFAULT_BUCKETS: documents
    command: server /data --console-address ":9001"
    volumes:
      - 'minio_data:/data'
    networks:
      - elastic 

  web:
    image: paperless-rest
    build:
      context: .
      dockerfile: Web/Dockerfile
      target: debug
    ports:
     - "8081:8081"
     - "5005:5005" # remote debugging
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081
      - DOTNET_USE_POLLING_FILE_WATCHER=1  # hot reload for debugging
      - ASPNETCORE_REMOTE_DEBUGGING=5005   # port for debugging
    depends_on:
      - postgres
      - rabbitmq
      - minio
      - elasticsearch
    volumes:
      - ./src:/app
      - ./uploads:/app/uploads
    networks:
      - elastic 

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: karo
      RABBITMQ_DEFAULT_PASS: karo
    networks:
      - elastic 

  nginx:
    image: nginx:alpine
    ports:
      - "8080:8080"
      - "80:80"
    volumes:
      - ./Web/wwwroot/nginx.conf:/etc/nginx/nginx.conf
      - ./Web/wwwroot/html:/usr/share/nginx/html
    depends_on:
      - web
    networks:
      - elastic

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: karo
      POSTGRES_PASSWORD: karo
      POSTGRES_DB: dmsdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: postgres -c listen_addresses='*'
    networks:
      - elastic 
 
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: karo@karo.com
      PGADMIN_DEFAULT_PASSWORD: karo
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - elastic

  ocr_worker:
    image: ocr_worker_image
    build:
      context: ./OcrWorker  
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./uploads:/app/uploads
    networks:
     - elastic 

volumes:
  postgres-data:  
  elasticsearch-data:
  minio_data:
    driver: local

networks:
  elastic:
    driver: bridge
